{"name":"PDFtoPPTX","tagline":"Imports PDF presentation into Power Point","body":"# PDFtoPPTX 0.2\r\n############\r\n\r\n## Motivation\r\n##################################################################################\r\nThe essential idea of this project evolved from my wish to use the Power Point\r\npresenter view for my LaTex created slides that are in PDF. So it’s actually no\r\nfancy wish I thought but trying to use the Adobe implemented options resulted in\r\nquite crappy output. Since I didn’t want to pay for any third party software\r\nthat didn’t offer previews of their output I decided to code something myself.\r\nThis how my first project in C# came to life.\r\n\r\n## How it works\r\n##################################################################################\r\nWhat you find in this repository is basically the second version of my windows\r\nfrom application. The small tool basically takes a snapshot of each slide of the\r\nPDF presentation and imports it into a new Power Point presentation. You need\r\nPower Point and a the Adobe Acrobat Pro/Reader to use the program. The user\r\nspecifies the location of a dummy.potx that is used as target for the snapshots,\r\nthe path of the source PDF, the number of slides, the output path and some place\r\nto store the temporary snapshots. The quality of the resulting pptx is great and\r\nafter “conversion” you can add comments in Power Point that are available in the\r\npresenter mode in Power Point. The minor drawback is, that any links or buttons\r\nincluded in the original PDF are not preserved since the slides are copied as\r\npictures.\r\n\r\n## What I did and didn’t do\r\n##################################################################################\r\nSo far I used Visual Studio and C# to write the program. All actions performed\r\non the PDF are done via sendKeys commands. I know it’s not the best option but\r\nit’s my first C program ever and I thought that will do. I couldn’t get a direct\r\nAdobe access to work, so if anyone has a better solution it will be much\r\nappreciated. For the Power Point operations I used the implemented Office\r\nlibraries in Visual Studio to command Power Point “directly”. In the first\r\nversions this was also done via sendKeys. It has some controls implemented to\r\ncheck if all necessary inputs are made and returns an error message if not. I\r\ndidn’t find a way around the Office protection against downloaded files, so maybe\r\none has to manually approve the dummy.potx, open it confirm the dialog, or just\r\ncreate an empty PPTX as target. Another small issue is that it’s not working in\r\nthe background. So as long as the conversion runs you cannot make any input, but\r\nsince it’s quite fast, on an average PC, I didn’t bother to work on that.\r\n\r\nAt this time it is certainly not perfect but it’s serves the purpose it was\r\ncreated for. I find it quite useful therefore wanted to share it. If somebody\r\nknows how to improve it you are welcome to it.\r\n\r\nSo fare it works with of Power Point 07/10/12 and Adobe Acrobat/Reader 11 on\r\nWindows 7. The short cuts for Adobe Acrobat/Reader 9 are in the comments of the\r\nsource code. I couldn’t get a version selection to work so I just left it in the\r\ncomments.\r\n\r\n## Repository Content\r\n##################################################################################\r\nThis repository includes the Visual Studios Project Folder, the release folder\r\nincluding the dummy.potx and the actual program .exe file, and an additional file\r\nwith source code in C#.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}